pipeline {
    agent any
    options {
        buildDiscarder(logRotator(numToKeepStr: '5', artifactNumToKeepStr: '5'))
    }

    stages {
        stage('Build') {
            steps {
                echo 'Building MyHouseApi'
                powershell 'dotnet build'
            }
        }
        stage('Test') {
            steps {
                echo 'Unit Testing MyHouseApi'
                powershell 'dotnet test ".\\MyHouse_UnitTests\\MyHouseUnitTests.csproj"'
            }
        }
        stage('Deploy') {
            steps {
                echo 'Deploying Integration Test MyHouseApi'
                echo 'Restarting app pool for test api'
                powershell """
                    Write-Host "Load IIS module:"
                    Import-Module WebAdministration
                    Write-Host "Set a name of the site we want to recycle the pool for:"
                    \$site = "Default Web Site/MyHouseTestAPI_${env.BRANCH_NAME}"
                    Write-Host "Get pool name by the site name:"
                    \$pool = (Get-Item "IIS:\\Sites\\\$site"| Select-Object applicationPool).applicationPool
                    Write-Host "Recycle the application pool:"
                    Restart-WebAppPool \$pool
                """
                echo 'Publishing Integration Test API'
                powershell "dotnet publish \".\\MyHouse_API\\MyHouseAPI.csproj\" -o \"C:\\wwwroot\\MyHouseTestAPI_${env.BRANCH_NAME}\""
            }
        }
        stage('Integration Test') {
            steps {
                echo 'Integration Testing MyHouseApi'
                echo 'Setting up integration testing database'
                powershell ".\\BuildScripts\\SetupUnitTestDb.ps1 -repoDir \"${env.WORKSPACE}\" -server \"EDLAPTOP\\EDLAPTOPSQL\" -db \"MyHouse_Dev_Tests_${env.BRANCH_NAME}\""
                echo 'Running integration tests'
                powershell 'dotnet test ".\\MyHouse_IntegrationTests\\MyHouseIntegrationTests.csproj"'
            }
        }
    }
}